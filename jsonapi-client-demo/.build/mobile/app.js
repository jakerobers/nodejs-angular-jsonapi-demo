(function(){function t(t){function n(n,r,e,i,u,o){for(;u>=0&&o>u;u+=t){var a=i?i[u]:u;e=r(e,n[a],a,n)}return e}return function(r,e,i,u){e=b(e,u,4);var o=!E(r)&&m.keys(r),a=(o||r).length,s=t>0?0:a-1;return arguments.length<3&&(i=r[o?o[s]:s],s+=t),n(r,e,i,o,s,a)}}function n(t){return function(n,r,e){r=_(r,e);for(var i=A(n),u=t>0?0:i-1;u>=0&&i>u;u+=t)if(r(n[u],u,n))return u;return-1}}function r(t,n,r){return function(e,i,u){var o=0,a=A(e);if("number"==typeof u)t>0?o=u>=0?u:Math.max(u+a,o):a=u>=0?Math.min(u+1,a):u+a+1;else if(r&&u&&a)return u=r(e,i),e[u]===i?u:-1;if(i!==i)return u=n(l.call(e,o,a),m.isNaN),u>=0?u+o:-1;for(u=t>0?o:a-1;u>=0&&a>u;u+=t)if(e[u]===i)return u;return-1}}function e(t,n){var r=M.length,e=t.constructor,i=m.isFunction(e)&&e.prototype||a,u="constructor";for(m.has(t,u)&&!m.contains(n,u)&&n.push(u);r--;)u=M[r],u in t&&t[u]!==i[u]&&!m.contains(n,u)&&n.push(u)}var i=this,u=i._,o=Array.prototype,a=Object.prototype,s=Function.prototype,c=o.push,l=o.slice,p=a.toString,f=a.hasOwnProperty,h=Array.isArray,d=Object.keys,y=s.bind,v=Object.create,g=function(){},m=function(t){return t instanceof m?t:this instanceof m?void(this._wrapped=t):new m(t)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=m),exports._=m):i._=m,m.VERSION="1.8.3";var b=function(t,n,r){if(void 0===n)return t;switch(null==r?3:r){case 1:return function(r){return t.call(n,r)};case 2:return function(r,e){return t.call(n,r,e)};case 3:return function(r,e,i){return t.call(n,r,e,i)};case 4:return function(r,e,i,u){return t.call(n,r,e,i,u)}}return function(){return t.apply(n,arguments)}},_=function(t,n,r){return null==t?m.identity:m.isFunction(t)?b(t,n,r):m.isObject(t)?m.matcher(t):m.property(t)};m.iteratee=function(t,n){return _(t,n,1/0)};var w=function(t,n){return function(r){var e=arguments.length;if(2>e||null==r)return r;for(var i=1;e>i;i++)for(var u=arguments[i],o=t(u),a=o.length,s=0;a>s;s++){var c=o[s];n&&void 0!==r[c]||(r[c]=u[c])}return r}},j=function(t){if(!m.isObject(t))return{};if(v)return v(t);g.prototype=t;var n=new g;return g.prototype=null,n},O=function(t){return function(n){return null==n?void 0:n[t]}},x=Math.pow(2,53)-1,A=O("length"),E=function(t){var n=A(t);return"number"==typeof n&&n>=0&&x>=n};m.each=m.forEach=function(t,n,r){n=b(n,r);var e,i;if(E(t))for(e=0,i=t.length;i>e;e++)n(t[e],e,t);else{var u=m.keys(t);for(e=0,i=u.length;i>e;e++)n(t[u[e]],u[e],t)}return t},m.map=m.collect=function(t,n,r){n=_(n,r);for(var e=!E(t)&&m.keys(t),i=(e||t).length,u=Array(i),o=0;i>o;o++){var a=e?e[o]:o;u[o]=n(t[a],a,t)}return u},m.reduce=m.foldl=m.inject=t(1),m.reduceRight=m.foldr=t(-1),m.find=m.detect=function(t,n,r){var e;return e=E(t)?m.findIndex(t,n,r):m.findKey(t,n,r),void 0!==e&&-1!==e?t[e]:void 0},m.filter=m.select=function(t,n,r){var e=[];return n=_(n,r),m.each(t,function(t,r,i){n(t,r,i)&&e.push(t)}),e},m.reject=function(t,n,r){return m.filter(t,m.negate(_(n)),r)},m.every=m.all=function(t,n,r){n=_(n,r);for(var e=!E(t)&&m.keys(t),i=(e||t).length,u=0;i>u;u++){var o=e?e[u]:u;if(!n(t[o],o,t))return!1}return!0},m.some=m.any=function(t,n,r){n=_(n,r);for(var e=!E(t)&&m.keys(t),i=(e||t).length,u=0;i>u;u++){var o=e?e[u]:u;if(n(t[o],o,t))return!0}return!1},m.contains=m.includes=m.include=function(t,n,r,e){return E(t)||(t=m.values(t)),("number"!=typeof r||e)&&(r=0),m.indexOf(t,n,r)>=0},m.invoke=function(t,n){var r=l.call(arguments,2),e=m.isFunction(n);return m.map(t,function(t){var i=e?n:t[n];return null==i?i:i.apply(t,r)})},m.pluck=function(t,n){return m.map(t,m.property(n))},m.where=function(t,n){return m.filter(t,m.matcher(n))},m.findWhere=function(t,n){return m.find(t,m.matcher(n))},m.max=function(t,n,r){var e,i,u=-1/0,o=-1/0;if(null==n&&null!=t){t=E(t)?t:m.values(t);for(var a=0,s=t.length;s>a;a++)e=t[a],e>u&&(u=e)}else n=_(n,r),m.each(t,function(t,r,e){i=n(t,r,e),(i>o||i===-1/0&&u===-1/0)&&(u=t,o=i)});return u},m.min=function(t,n,r){var e,i,u=1/0,o=1/0;if(null==n&&null!=t){t=E(t)?t:m.values(t);for(var a=0,s=t.length;s>a;a++)e=t[a],u>e&&(u=e)}else n=_(n,r),m.each(t,function(t,r,e){i=n(t,r,e),(o>i||1/0===i&&1/0===u)&&(u=t,o=i)});return u},m.shuffle=function(t){for(var n,r=E(t)?t:m.values(t),e=r.length,i=Array(e),u=0;e>u;u++)n=m.random(0,u),n!==u&&(i[u]=i[n]),i[n]=r[u];return i},m.sample=function(t,n,r){return null==n||r?(E(t)||(t=m.values(t)),t[m.random(t.length-1)]):m.shuffle(t).slice(0,Math.max(0,n))},m.sortBy=function(t,n,r){return n=_(n,r),m.pluck(m.map(t,function(t,r,e){return{value:t,index:r,criteria:n(t,r,e)}}).sort(function(t,n){var r=t.criteria,e=n.criteria;if(r!==e){if(r>e||void 0===r)return 1;if(e>r||void 0===e)return-1}return t.index-n.index}),"value")};var k=function(t){return function(n,r,e){var i={};return r=_(r,e),m.each(n,function(e,u){var o=r(e,u,n);t(i,e,o)}),i}};m.groupBy=k(function(t,n,r){m.has(t,r)?t[r].push(n):t[r]=[n]}),m.indexBy=k(function(t,n,r){t[r]=n}),m.countBy=k(function(t,n,r){m.has(t,r)?t[r]++:t[r]=1}),m.toArray=function(t){return t?m.isArray(t)?l.call(t):E(t)?m.map(t,m.identity):m.values(t):[]},m.size=function(t){return null==t?0:E(t)?t.length:m.keys(t).length},m.partition=function(t,n,r){n=_(n,r);var e=[],i=[];return m.each(t,function(t,r,u){(n(t,r,u)?e:i).push(t)}),[e,i]},m.first=m.head=m.take=function(t,n,r){return null==t?void 0:null==n||r?t[0]:m.initial(t,t.length-n)},m.initial=function(t,n,r){return l.call(t,0,Math.max(0,t.length-(null==n||r?1:n)))},m.last=function(t,n,r){return null==t?void 0:null==n||r?t[t.length-1]:m.rest(t,Math.max(0,t.length-n))},m.rest=m.tail=m.drop=function(t,n,r){return l.call(t,null==n||r?1:n)},m.compact=function(t){return m.filter(t,m.identity)};var S=function(t,n,r,e){for(var i=[],u=0,o=e||0,a=A(t);a>o;o++){var s=t[o];if(E(s)&&(m.isArray(s)||m.isArguments(s))){n||(s=S(s,n,r));var c=0,l=s.length;for(i.length+=l;l>c;)i[u++]=s[c++]}else r||(i[u++]=s)}return i};m.flatten=function(t,n){return S(t,n,!1)},m.without=function(t){return m.difference(t,l.call(arguments,1))},m.uniq=m.unique=function(t,n,r,e){m.isBoolean(n)||(e=r,r=n,n=!1),null!=r&&(r=_(r,e));for(var i=[],u=[],o=0,a=A(t);a>o;o++){var s=t[o],c=r?r(s,o,t):s;n?(o&&u===c||i.push(s),u=c):r?m.contains(u,c)||(u.push(c),i.push(s)):m.contains(i,s)||i.push(s)}return i},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(t){for(var n=[],r=arguments.length,e=0,i=A(t);i>e;e++){var u=t[e];if(!m.contains(n,u)){for(var o=1;r>o&&m.contains(arguments[o],u);o++);o===r&&n.push(u)}}return n},m.difference=function(t){var n=S(arguments,!0,!0,1);return m.filter(t,function(t){return!m.contains(n,t)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(t){for(var n=t&&m.max(t,A).length||0,r=Array(n),e=0;n>e;e++)r[e]=m.pluck(t,e);return r},m.object=function(t,n){for(var r={},e=0,i=A(t);i>e;e++)n?r[t[e]]=n[e]:r[t[e][0]]=t[e][1];return r},m.findIndex=n(1),m.findLastIndex=n(-1),m.sortedIndex=function(t,n,r,e){r=_(r,e,1);for(var i=r(n),u=0,o=A(t);o>u;){var a=Math.floor((u+o)/2);r(t[a])<i?u=a+1:o=a}return u},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(t,n,r){null==n&&(n=t||0,t=0),r=r||1;for(var e=Math.max(Math.ceil((n-t)/r),0),i=Array(e),u=0;e>u;u++,t+=r)i[u]=t;return i};var R=function(t,n,r,e,i){if(!(e instanceof n))return t.apply(r,i);var u=j(t.prototype),o=t.apply(u,i);return m.isObject(o)?o:u};m.bind=function(t,n){if(y&&t.bind===y)return y.apply(t,l.call(arguments,1));if(!m.isFunction(t))throw new TypeError("Bind must be called on a function");var r=l.call(arguments,2),e=function(){return R(t,e,n,this,r.concat(l.call(arguments)))};return e},m.partial=function(t){var n=l.call(arguments,1),r=function(){for(var e=0,i=n.length,u=Array(i),o=0;i>o;o++)u[o]=n[o]===m?arguments[e++]:n[o];for(;e<arguments.length;)u.push(arguments[e++]);return R(t,r,this,this,u)};return r},m.bindAll=function(t){var n,r,e=arguments.length;if(1>=e)throw new Error("bindAll must be passed function names");for(n=1;e>n;n++)r=arguments[n],t[r]=m.bind(t[r],t);return t},m.memoize=function(t,n){var r=function(e){var i=r.cache,u=""+(n?n.apply(this,arguments):e);return m.has(i,u)||(i[u]=t.apply(this,arguments)),i[u]};return r.cache={},r},m.delay=function(t,n){var r=l.call(arguments,2);return setTimeout(function(){return t.apply(null,r)},n)},m.defer=m.partial(m.delay,m,1),m.throttle=function(t,n,r){var e,i,u,o=null,a=0;r||(r={});var s=function(){a=r.leading===!1?0:m.now(),o=null,u=t.apply(e,i),o||(e=i=null)};return function(){var c=m.now();a||r.leading!==!1||(a=c);var l=n-(c-a);return e=this,i=arguments,0>=l||l>n?(o&&(clearTimeout(o),o=null),a=c,u=t.apply(e,i),o||(e=i=null)):o||r.trailing===!1||(o=setTimeout(s,l)),u}},m.debounce=function(t,n,r){var e,i,u,o,a,s=function(){var c=m.now()-o;n>c&&c>=0?e=setTimeout(s,n-c):(e=null,r||(a=t.apply(u,i),e||(u=i=null)))};return function(){u=this,i=arguments,o=m.now();var c=r&&!e;return e||(e=setTimeout(s,n)),c&&(a=t.apply(u,i),u=i=null),a}},m.wrap=function(t,n){return m.partial(n,t)},m.negate=function(t){return function(){return!t.apply(this,arguments)}},m.compose=function(){var t=arguments,n=t.length-1;return function(){for(var r=n,e=t[n].apply(this,arguments);r--;)e=t[r].call(this,e);return e}},m.after=function(t,n){return function(){return--t<1?n.apply(this,arguments):void 0}},m.before=function(t,n){var r;return function(){return--t>0&&(r=n.apply(this,arguments)),1>=t&&(n=null),r}},m.once=m.partial(m.before,2);var F=!{toString:null}.propertyIsEnumerable("toString"),M=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];m.keys=function(t){if(!m.isObject(t))return[];if(d)return d(t);var n=[];for(var r in t)m.has(t,r)&&n.push(r);return F&&e(t,n),n},m.allKeys=function(t){if(!m.isObject(t))return[];var n=[];for(var r in t)n.push(r);return F&&e(t,n),n},m.values=function(t){for(var n=m.keys(t),r=n.length,e=Array(r),i=0;r>i;i++)e[i]=t[n[i]];return e},m.mapObject=function(t,n,r){n=_(n,r);for(var e,i=m.keys(t),u=i.length,o={},a=0;u>a;a++)e=i[a],o[e]=n(t[e],e,t);return o},m.pairs=function(t){for(var n=m.keys(t),r=n.length,e=Array(r),i=0;r>i;i++)e[i]=[n[i],t[n[i]]];return e},m.invert=function(t){for(var n={},r=m.keys(t),e=0,i=r.length;i>e;e++)n[t[r[e]]]=r[e];return n},m.functions=m.methods=function(t){var n=[];for(var r in t)m.isFunction(t[r])&&n.push(r);return n.sort()},m.extend=w(m.allKeys),m.extendOwn=m.assign=w(m.keys),m.findKey=function(t,n,r){n=_(n,r);for(var e,i=m.keys(t),u=0,o=i.length;o>u;u++)if(e=i[u],n(t[e],e,t))return e},m.pick=function(t,n,r){var e,i,u={},o=t;if(null==o)return u;m.isFunction(n)?(i=m.allKeys(o),e=b(n,r)):(i=S(arguments,!1,!1,1),e=function(t,n,r){return n in r},o=Object(o));for(var a=0,s=i.length;s>a;a++){var c=i[a],l=o[c];e(l,c,o)&&(u[c]=l)}return u},m.omit=function(t,n,r){if(m.isFunction(n))n=m.negate(n);else{var e=m.map(S(arguments,!1,!1,1),String);n=function(t,n){return!m.contains(e,n)}}return m.pick(t,n,r)},m.defaults=w(m.allKeys,!0),m.create=function(t,n){var r=j(t);return n&&m.extendOwn(r,n),r},m.clone=function(t){return m.isObject(t)?m.isArray(t)?t.slice():m.extend({},t):t},m.tap=function(t,n){return n(t),t},m.isMatch=function(t,n){var r=m.keys(n),e=r.length;if(null==t)return!e;for(var i=Object(t),u=0;e>u;u++){var o=r[u];if(n[o]!==i[o]||!(o in i))return!1}return!0};var B=function(t,n,r,e){if(t===n)return 0!==t||1/t===1/n;if(null==t||null==n)return t===n;t instanceof m&&(t=t._wrapped),n instanceof m&&(n=n._wrapped);var i=p.call(t);if(i!==p.call(n))return!1;switch(i){case"[object RegExp]":case"[object String]":return""+t==""+n;case"[object Number]":return+t!==+t?+n!==+n:0===+t?1/+t===1/n:+t===+n;case"[object Date]":case"[object Boolean]":return+t===+n}var u="[object Array]"===i;if(!u){if("object"!=typeof t||"object"!=typeof n)return!1;var o=t.constructor,a=n.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor"in t&&"constructor"in n)return!1}r=r||[],e=e||[];for(var s=r.length;s--;)if(r[s]===t)return e[s]===n;if(r.push(t),e.push(n),u){if(s=t.length,s!==n.length)return!1;for(;s--;)if(!B(t[s],n[s],r,e))return!1}else{var c,l=m.keys(t);if(s=l.length,m.keys(n).length!==s)return!1;for(;s--;)if(c=l[s],!m.has(n,c)||!B(t[c],n[c],r,e))return!1}return r.pop(),e.pop(),!0};m.isEqual=function(t,n){return B(t,n)},m.isEmpty=function(t){return null==t?!0:E(t)&&(m.isArray(t)||m.isString(t)||m.isArguments(t))?0===t.length:0===m.keys(t).length},m.isElement=function(t){return!(!t||1!==t.nodeType)},m.isArray=h||function(t){return"[object Array]"===p.call(t)},m.isObject=function(t){var n=typeof t;return"function"===n||"object"===n&&!!t},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(t){m["is"+t]=function(n){return p.call(n)==="[object "+t+"]"}}),m.isArguments(arguments)||(m.isArguments=function(t){return m.has(t,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(t){return"function"==typeof t||!1}),m.isFinite=function(t){return isFinite(t)&&!isNaN(parseFloat(t))},m.isNaN=function(t){return m.isNumber(t)&&t!==+t},m.isBoolean=function(t){return t===!0||t===!1||"[object Boolean]"===p.call(t)},m.isNull=function(t){return null===t},m.isUndefined=function(t){return void 0===t},m.has=function(t,n){return null!=t&&f.call(t,n)},m.noConflict=function(){return i._=u,this},m.identity=function(t){return t},m.constant=function(t){return function(){return t}},m.noop=function(){},m.property=O,m.propertyOf=function(t){return null==t?function(){}:function(n){return t[n]}},m.matcher=m.matches=function(t){return t=m.extendOwn({},t),function(n){return m.isMatch(n,t)}},m.times=function(t,n,r){var e=Array(Math.max(0,t));n=b(n,r,1);for(var i=0;t>i;i++)e[i]=n(i);return e},m.random=function(t,n){return null==n&&(n=t,t=0),t+Math.floor(Math.random()*(n-t+1))},m.now=Date.now||function(){return(new Date).getTime()};var N={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},T=m.invert(N),I=function(t){var n=function(n){return t[n]},r="(?:"+m.keys(t).join("|")+")",e=RegExp(r),i=RegExp(r,"g");return function(t){return t=null==t?"":""+t,e.test(t)?t.replace(i,n):t}};m.escape=I(N),m.unescape=I(T),m.result=function(t,n,r){var e=null==t?void 0:t[n];return void 0===e&&(e=r),m.isFunction(e)?e.call(t):e};var $=0;m.uniqueId=function(t){var n=++$+"";return t?t+n:n},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var P=/(.)^/,q={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g,J=function(t){return"\\"+q[t]};m.template=function(t,n,r){!n&&r&&(n=r),n=m.defaults({},n,m.templateSettings);var e=RegExp([(n.escape||P).source,(n.interpolate||P).source,(n.evaluate||P).source].join("|")+"|$","g"),i=0,u="__p+='";t.replace(e,function(n,r,e,o,a){return u+=t.slice(i,a).replace(D,J),i=a+n.length,r?u+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":e?u+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(u+="';\n"+o+"\n__p+='"),n}),u+="';\n",n.variable||(u="with(obj||{}){\n"+u+"}\n"),u="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+u+"return __p;\n";try{var o=new Function(n.variable||"obj","_",u)}catch(a){throw a.source=u,a}var s=function(t){return o.call(this,t,m)},c=n.variable||"obj";return s.source="function("+c+"){\n"+u+"}",s},m.chain=function(t){var n=m(t);return n._chain=!0,n};var L=function(t,n){return t._chain?m(n).chain():n};m.mixin=function(t){m.each(m.functions(t),function(n){var r=m[n]=t[n];m.prototype[n]=function(){var t=[this._wrapped];return c.apply(t,arguments),L(this,r.apply(m,t))}})},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(t){var n=o[t];m.prototype[t]=function(){var r=this._wrapped;return n.apply(r,arguments),"shift"!==t&&"splice"!==t||0!==r.length||delete r[0],L(this,r)}}),m.each(["concat","join","slice"],function(t){var n=o[t];m.prototype[t]=function(){return L(this,n.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m})}).call(this),function(){var t,n=function(t,n){function e(){this.constructor=t}for(var i in n)r.call(n,i)&&(t[i]=n[i]);return e.prototype=n.prototype,t.prototype=new e,t.__super__=n.prototype,t},r={}.hasOwnProperty;t=function(){function t(t,n){if(!_.isObject(t)&&!_.isArray(t))throw new Error("Object was not passed into JsonApiCompressor.");if(!(t.type||_.isString(t.type)||t[0].type&&_.isString(t[0].type)))throw new Error("The type for an object must be defined as a string.");if(!t.id&&!t[0].id)throw new Error("The id for an object is undefined.");this.object=t,this.parent=n,this.output={data:{},included:[],links:{}}}return t.prototype.parent=null,t.prototype.object=null,t.prototype.output=null,t.prototype.attributes=function(t){var n,r,e,i,u;if(!t)throw new Error("The attributes for an object is undefined.");if(!_.isArray(t))throw new Error("The attributes for an object must be a list.");if(!_.isObject(this.object)||_.isArray(this.object)||_.isFunction(this.object)){if(!_.isArray(this.object))throw new Error("The given object must be an object or array.");for(this.output.data=[],u=this.object,r=0,e=u.length;e>r;r++)i=u[r],n={id:i.id,type:i.type},n.attributes=_.pick(i,t),this.output.data.push(n)}else this.output.data={id:this.object.id,type:this.object.type},this.output.data.attributes=_.pick(this.object,t);return this},t.prototype.relationship=function(n){var r,e,i,u,o;if(!n)throw new Error("relationship must be given a parameter.");if(u=this.object[n],!u)throw new Error("Relationship object is not defined.");if(!_.isObject(u)||_.isArray(u)&&_.isEmpty(u))throw new Error("Relationship object must be an object, or an array with at least one index.");if(!(u.type||_.isArray(u)&&u[0].type))throw new Error("Relationship object type is not defined.");for(this.output.data.relationships||(this.output.data.relationships={}),this.output.data.relationships[n]||(this.output.data.relationships[n]={}),this.output.data.relationships[n].data||(this.output.data.relationships[n].data={}),_.isArray(u)||(u=[u]),r=0,e=u.length;e>r;r++)if(i=u[r],o={type:i.type},null!=i.id&&(o.id=i.id),_.isEmpty(this.output.data.relationships[n].data))this.output.data.relationships[n].data=o;else if(!_.isObject(this.output.data.relationships[n].data)||_.isArray(this.output.data.relationships[n].data)||_.isFunction(this.output.data.relationships[n].data)){if(!_.isArray(this.output.data.relationships[n].data))throw new Error("object."+n+".data must be an array or object.");this.output.data.relationships[n].data.push(o)}else this.output.data.relationships[n].data=[this.output.data.relationships[n].data],this.output.data.relationships[n].data.push(o);return new t(this.object[n],this)},t.prototype.done=function(){var t,n,r,e;if(!_.isObject(this.output.data)||_.isFunction(this.output.data))throw new Error("Output data did not convert properly: "+this.output.data);if(_.isArray(this.output.data))for(e=this.output.data,t=0,n=e.length;n>t;t++)r=e[t],this.parent.output.included.push(r);else this.parent.output.included.push(this.output.data);return this.parent},t}(),this.JsonApiCompressor=function(t){function r(t){r.__super__.constructor.call(this,t)}return n(r,t),r}(t)}.call(this);var JSONApiExpanderBase,indexOf=[].indexOf||function(t){for(var n=0,r=this.length;r>n;n++)if(n in this&&this[n]===t)return n;return-1},extend=function(t,n){function r(){this.constructor=t}for(var e in n)hasProp.call(n,e)&&(t[e]=n[e]);return r.prototype=n.prototype,t.prototype=new r,t.__super__=n.prototype,t},hasProp={}.hasOwnProperty;JSONApiExpanderBase=function(){function t(t,n,r){if(!_.isObject(t))throw new Error("data must be an object");if(!_.isArray(n))throw new Error("output must be an array");this.data=t,this.output=n,this.parent=r}return t.prototype.parent=null,t.prototype.data=null,t.prototype.output=null,t.prototype.generateBaseOutputObject=function(t){if(!_.isObject(t))throw new Error("$included_datum must be an object");return{$included_datum:t}},t.prototype.cleanOutputObject=function(t){if(!_.isObject(t))throw new Error("output_object must be an Object");return"$included_datum"in t?delete t.$included_datum:void 0},t.prototype.getRelationships=function(t,n){var r;if(!_.isObject(t))throw new Error("output_object must be an Object");if(r=t.$included_datum,null==r)console.warn("Missing '$included_datum' property on: ",t);else if("relationships"in t.$included_datum)if(n in r.relationships){if(null==r.relationships[n])return null;if("data"in r.relationships[n])return r.relationships[n].data;console.warn("Missing 'data' property on '"+r.type+".relationships."+n+"', data given was: ",r.relationships[n])}else console.warn("Missing '"+n+"' property on '"+r.type+".relationships', data given was: ",r.relationships);else console.warn("Missing 'relationships' property on '"+r.type+"', data given was:",r);return null},t.prototype.generateOutputObject=function(t,n){var r,e,i,u,o,a,s,c,l,p,f;if(!_.isObject(t))throw new Error("linkage must be an object");if(!("id"in t))throw new Error("Linked objects must contain an id");if(!("type"in t))throw new Error("Linked objects must contain a type");if(f=t.type,u=t.id,c=null,_.isArray(n))for(i=0,a=n.length;a>i;i++)if(e=n[i],r=e.$included_datum,r.id===u&&r.type===f)return e;for(r=null,l=this.data.included,o=0,s=l.length;s>o;o++)if(p=l[o],null!=p&&p.id===u&&p.type===f){r=p;break}return null==r&&(r={id:u}),c=this.generateBaseOutputObject(r)},t.prototype.attributes=function(t){var n,r,e,i,u,o,a,s,c;for(_.isArray(t)||(t=[]),c=this.output,i=e=0,o=c.length;o>e;i=++e)if(s=c[i],n=s.$included_datum,null!=n&&(s.id=n.id,null!=n.attributes))for(u=0,a=t.length;a>u;u++)r=t[u],r in n.attributes&&(s[r]=n.attributes[r]);return this},t.prototype.relation=function(n){var r,e,i,u,o,a,s,c,l,p,f;if(!_.isString(n))throw new Error("key must be a string");for(u=this.data.included,r=[],l=this.output,i=0,a=l.length;a>i;i++)if(c=l[i],f=this.getRelationships(c,n),_.isNull(f)&&(c[n]=null),_.isArray(f))for(o=0,s=f.length;s>o;o++)p=f[o],null!=p&&(e=this.generateOutputObject(p,r),null!=e&&(indexOf.call(r,e)<0&&r.push(e),(null!=c[n]?c[n]:c[n]=[]).push(e)));else _.isObject(f)&&(e=this.generateOutputObject(f,r),null!=e&&(r.push(e),c[n]=e));return new t(this.data,r,this)},t.prototype.done=function(){var t,n,r,e;for(e=this.output,t=0,n=e.length;n>t;t++)r=e[t],this.cleanOutputObject(r);return this.parent},t}(),this.JSONApiExpander=function(t){function n(t){var r,e,i;if(!_.isObject(t))throw new Error("data must be an object");if(e=t.data,_.isObject(e)&&!_.isArray(e)&&(e=[e]),!_.isArray(e))throw new Error("root must be an object or an array");r=function(){var t,n,r;for(r=[],t=0,n=e.length;n>t;t++)i=e[t],r.push(this.generateBaseOutputObject(i));return r}.call(this),n.__super__.constructor.call(this,t,r,this)}return extend(n,t),n.prototype.toArray=function(){return this.done().output},n.prototype.toObject=function(){return this.done().output[0]},n}(JSONApiExpanderBase),angular.module("app.dashboard",[]),angular.module("app.config",[]),angular.module("app.models",[]),angular.module("app",["ngRoute","ngResource","ngMessages","ngWebSocket","app.dashboard"]).config(["$httpProvider",function(t){t.defaults.useXDomain=!0,delete t.defaults.headers.common["X-Requested-With"]}]),angular.module("app").config(["$routeProvider",function(t){var n={dashboardRoute:{templateUrl:"templates/dashboard.mobile.html",controller:"DashboardCtrl"}};t.when("/",n.dashboardRoute).when("/dashboard",n.dashboardRoute).otherwise({redirectTo:n.dashboardRoute})}]);var determine_api_base=function(t){var n=location.protocol+"//"+location.hostname+":3000/api";return t.indexOf("domain")<0&&(n="https://domain.herokuapp.com"),n},determine_ws_base=function(t){var n="ws://"+location.hostname+":3000/";return t.indexOf("domain")<0&&(n="ws://domain.herokuapp.com"),n};angular.module("app.config").constant("ngAuthSettings",{apiServiceBaseUri:determine_api_base(document.URL),wsServiceBaseUri:determine_ws_base(document.URL)}).constant("httpOptions",{"Content-Type":"application/json; charset=utf-8",Accept:"application/json, text/javascript"}),angular.module("app.dashboard").controller("DashboardCtrl",["$scope",function(t){}]);
//# sourceMappingURL=data:application/json;base64,
